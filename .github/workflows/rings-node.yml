name: rings-node

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  build_wasm:
    name: Build and test for wasm
    timeout-minutes: 10
    strategy:
      matrix:
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: jetli/wasm-bindgen-action@v0.1.0
        with:
          version: "0.2.79"
      - name: Run clippy for wasm
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p rings-core --features wasm --no-deps --no-default-features --target=wasm32-unknown-unknown --tests -- -D warnings
      - name: Build
        run: cargo build -p rings-core --target=wasm32-unknown-unknown --features wasm --no-default-features
      - name: Run tests
        uses: GabrielBB/xvfb-action@v1
        with:
          working-directory: ./rings-core
          run: cargo test --target=wasm32-unknown-unknown --features wasm --no-default-features
      - name: Run rings-node test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: cargo test --target=wasm32-unknown-unknown --features browser --no-default-features

  build:
    name: Build and test
    timeout-minutes: 10
    strategy:
      matrix:
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: shogo82148/actions-setup-redis@v1
        with:
          auto-start: "false"
      - name: Build
        run: cargo build --features client --features daemon --all --verbose
      - name: Run tests
        run: cargo test --all --verbose

  rustfmt_and_clippy:
    name: Check rustfmt style && run clippy
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-01-01
          components: clippy, rustfmt
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests -- -D warnings
      - name: Check formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
